{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Contact-keeper API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:5001",
  "basePath": "/api/v1",
  "tags": [],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerJwtAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization",
      "scheme": "bearer",
      "bearerFormat": "JWT",
      "description": "Bearer schema based JWT authorization according to rfc7519. e.g.: \"Bearer {token}\""
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api-docs": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/users/": {
      "post": {
        "tags": [],
        "description": "Adding new user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Representing new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Object with auth \"token\" field for the added user",
            "schema": {
              "$ref": "#/definitions/TokenResp"
            }
          },
          "400": {
            "description": "Bad request. Validation errors object",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        }
      }
    },
    "/auth/": {
      "get": {
        "tags": [],
        "description": "Fetching logged in user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. Object representing logged in user",
            "schema": {
              "$ref": "#/definitions/UserResp"
            }
          },
          "401": {
            "description": "Unauthorizad. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "bearerJwtAuth": []
          }
        ]
      },
      "post": {
        "tags": [],
        "description": "Logging in user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Object representing user credentials",
            "schema": {
              "$ref": "#/definitions/LogIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Object with auth \"token\" field for the user",
            "schema": {
              "$ref": "#/definitions/TokenResp"
            }
          },
          "400": {
            "description": "Bad request. Validation errors object",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        }
      }
    },
    "/contacts/": {
      "get": {
        "tags": [],
        "description": "Getting all the user contacts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. Objects array representing user contacts",
            "schema": {
              "$ref": "#/definitions/ContactsResp"
            }
          },
          "401": {
            "description": "Unauthorizad. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "bearerJwtAuth": []
          }
        ]
      },
      "post": {
        "tags": [],
        "description": "Adding new contact for the user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Representing new contact",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Object representing added contact",
            "schema": {
              "$ref": "#/definitions/ContactResp"
            }
          },
          "400": {
            "description": "Bad request. Validation errors object",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "401": {
            "description": "Unauthorizad. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "bearerJwtAuth": []
          }
        ]
      }
    },
    "/contacts/{id}": {
      "put": {
        "tags": [],
        "description": "Updating existed contact for the user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Existed contact id",
            "schema": {
              "$ref": "#/definitions/ContactId"
            }
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Existed contact fields to be updated",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Object representing updated contact",
            "schema": {
              "$ref": "#/definitions/ContactResp"
            }
          },
          "400": {
            "description": "Bad request. Validation errors object",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "401": {
            "description": "Unauthorizad. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "403": {
            "description": "Forbidden. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "404": {
            "description": "Not exist. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "bearerJwtAuth": []
          }
        ]
      },
      "delete": {
        "tags": [],
        "description": "Deleting existed contact for the user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Existed contact id",
            "schema": {
              "$ref": "#/definitions/ContactId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Object with success message field",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "Bad request. Validation errors object",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "401": {
            "description": "Unauthorizad. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "403": {
            "description": "Forbidden. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "404": {
            "description": "Not exist. Object with msg field representing detailed reason",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "bearerJwtAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@somemail.com"
        },
        "password": {
          "type": "string",
          "example": "jd123456&"
        }
      }
    },
    "UserResp": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6108588085fe156111731ad0"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@somemail.com"
        },
        "date": {
          "type": "string",
          "example": "2021-08-02T20:41:36.516Z"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "TokenResp": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEwODU4ODA4NWZlMTU2MTExNzMxYWQwIn0sImlhdCI6MTYyODQzNjc2NCwiZXhwIjoxNjI4NDQwMzY0fQ.ss_4I4RspagVF_DBbb0S9eY96qX-R6ZUrdFaDOZDetM"
        }
      }
    },
    "ContactId": {
      "type": "string",
      "example": "611b7bc3919737614941a07d"
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sarah Smith"
        },
        "email": {
          "type": "string",
          "example": "sarah.smith@somemail.com"
        },
        "phone": {
          "type": "string",
          "example": "555 - 5555 - 5555"
        },
        "type": {
          "type": "string",
          "example": "professional"
        }
      }
    },
    "ContactResp": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "professional"
        },
        "_id": {
          "type": "string",
          "example": "611b7bc3919737614941a07d"
        },
        "userId": {
          "type": "string",
          "example": "6108588085fe156111731ad0"
        },
        "name": {
          "type": "string",
          "example": "Sarah Smith"
        },
        "email": {
          "type": "string",
          "example": "sarah.smith@somemail.com"
        },
        "phone": {
          "type": "string",
          "example": "555 - 5555 - 5555"
        },
        "date": {
          "type": "string",
          "example": "2021-08-17T09:05:07.732Z"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "ContactsResp": {
      "type": "array",
      "example": [
        "{contact1}",
        "{contact2}",
        "{contact...}"
      ],
      "items": {
        "type": "string"
      }
    },
    "LogIn": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john.doe@somemail.com"
        },
        "password": {
          "type": "string",
          "example": "jd123456&"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "example": "Detailed message goes here"
        }
      }
    },
    "ValidationErrors": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "example": "caused field value"
              },
              "msg": {
                "type": "string",
                "example": "Detailed message goes here"
              },
              "param": {
                "type": "string",
                "example": "caused field name"
              },
              "location": {
                "type": "string",
                "example": "caused field location (body/header/etc)"
              }
            }
          }
        }
      }
    }
  }
}